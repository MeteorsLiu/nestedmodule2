name: Continuous Integration

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  llcppg-generate:
    name: JavaScript Tests
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-24.04
        llvm: [18]
    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      # - name: Set up Go
      #   uses: actions/setup-go@v4
      #   with:
      #     go-version: "1.23"
      # - name: Install dependencies
      #   if: startsWith(matrix.os, 'macos')
      #   run: |
      #     brew update
      #     brew install llvm@${{ matrix.llvm }} bdw-gc openssl libffi
      #     brew link --force libffi
      #     echo "$(brew --prefix llvm@${{ matrix.llvm }})/bin" >> $GITHUB_PATH
      #     # llcppg dependencies
      #     brew install cjson
      # - name: Install dependencies
      #   if: startsWith(matrix.os, 'ubuntu')
      #   run: |
      #     echo "deb http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-${{ matrix.llvm }} main" | sudo tee /etc/apt/sources.list.d/llvm.list
      #     wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
      #     sudo apt-get update
      #     sudo apt-get install -y llvm-${{ matrix.llvm }}-dev clang-${{ matrix.llvm }} libunwind-dev libclang-${{ matrix.llvm }}-dev lld-${{ matrix.llvm }} pkg-config libgc-dev libssl-dev zlib1g-dev libffi-dev libcjson-dev
      #     echo "/usr/lib/llvm-${{ matrix.llvm }}/bin" >> $GITHUB_PATH
      # - name: Install LLGO
      #   run: |
      #     git clone https://github.com/goplus/llgo.git
      #     echo $PWD
      #     cd llgo/compiler
      #     go install -v ./cmd/...
      #     export LLGO_ROOT=$GITHUB_WORKSPACE/llgo
      #     echo "LLGO_ROOT=$LLGO_ROOT" >> $GITHUB_ENV
      # - name: Install LLCppg
      #   run: |
      #     git clone https://github.com/goplus/llcppg.git
      #     echo $PWD
      #     cd llcppg
      #     llgo install ./_xtool/llcppsymg
      #     llgo install ./_xtool/llcppsigfetch
      #     go install ./cmd/llcppcfg
      #     go install ./cmd/gogensig
      #     go install .
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        # with:
        #   since_last_remote_commit: true

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          echo ${ALL_CHANGED_FILES}
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

  # combineall:
  #   name: File Combination
  #   needs: [llcppg-generate]
  #   if: |
  #     always() &&
  #     !contains(needs.*.result, 'failure') &&
  #     !contains(needs.*.result, 'cancelled')
  #   uses: MeteorsLiu/combinejobs@v0.0.1
