name: Continuous Integration

on:
  pull_request:
    branches:
      - main

permissions:
  actions: none
  contents: write
  pull-requests: write

jobs:
  llcppg-generate:
    name: JavaScript Tests
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-24.04
        llvm: [18]
    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"
      - name: Skip Cache Parser Tool
        run: |
          go env -w GOPRIVATE=github.com/MeteorsLiu/nestedscript
      - name: Set up Parser Tool
        run: |
          go install -v github.com/MeteorsLiu/nestedscript@latest
      - name: Install dependencies
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install llvm@${{ matrix.llvm }} bdw-gc openssl libffi conan cmake libuv
          brew link --force libffi
          echo "$(brew --prefix llvm@${{ matrix.llvm }})/bin" >> $GITHUB_PATH
          # llcppg dependencies
          brew install cjson
      - name: Install dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          echo "deb http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-${{ matrix.llvm }} main" | sudo tee /etc/apt/sources.list.d/llvm.list
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip llvm-${{ matrix.llvm }}-dev libuv1-dev clang-${{ matrix.llvm }} libunwind-dev libclang-${{ matrix.llvm }}-dev lld-${{ matrix.llvm }} cmake pkg-config libgc-dev libssl-dev zlib1g-dev libffi-dev libcjson-dev
          echo "/usr/lib/llvm-${{ matrix.llvm }}/bin" >> $GITHUB_PATH
          python3 -m pip install conan
      - name: Check conan
        run: |
          conan -v
      - name: Install LLGO
        run: |
          git clone https://github.com/goplus/llgo.git
          echo $PWD
          cd llgo/compiler
          go install -v ./cmd/...
          export LLGO_ROOT=$GITHUB_WORKSPACE/llgo
          echo "LLGO_ROOT=$LLGO_ROOT" >> $GITHUB_ENV
      - name: Install LLCppg
        run: |
          git clone https://github.com/goplus/llcppg.git
          echo $PWD
          cd llcppg
          llgo install ./_xtool/llcppsymg
          llgo install ./_xtool/llcppsigfetch
          go install github.com/goplus/llcppg/cmd/llcppcfg@latest
          go install github.com/goplus/llcppg/cmd/gogensig@latest
          go install github.com/goplus/llcppg
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        # with:
        #   since_last_remote_commit: true

      - name: Generate Go Module
        id: gen-go-module
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          nestedscript

      - name: Upload to artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.LLCPPG_ABS_PATH }}
          retention-days: 1
          overwrite: true
          include-hidden-files: true
    outputs:
      LLCPPG_PATH: ${{ env.LLCPPG_PATH }}
  llcppg-combine:
    name: Combine Platform
    needs: [llcppg-generate]
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository.
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Combine
        uses: actions/download-artifact@v4
        with:
          path: ${{ needs.llcppg-generate.outputs.LLCPPG_PATH }}
          merge-multiple: true
      - name: List all files
        run: |
          cd ${{ needs.llcppg-generate.outputs.LLCPPG_PATH }}
          ls
      - name: Checkout PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr checkout ${{ github.event.pull_request.number }}

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.name "LLCPPG Bot"
          git add .
          git commit -m "feat: generate module"
          git push
